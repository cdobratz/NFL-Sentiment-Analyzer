[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[project]
name = "nfl-sentiment-analyzer"
version = "0.1.0"
description = "Real-time NFL sentiment analysis with MLOps pipeline"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "NFL Sentiment Team", email = "team@nflsentiment.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # Core FastAPI dependencies
    "fastapi>=0.115.0",
    "starlette>=0.40.0",
    "uvicorn[standard]>=0.24.0",
    "gunicorn>=22.0.0",
    # Database and caching
    "pymongo>=4.6.0,<5.0.0",
    "motor>=3.3.2,<4.0.0",
    "redis>=5.0.1,<6.0.0",
    # Environment and configuration
    "python-dotenv>=1.0.0,<2.0.0",
    "pydantic>=2.5.2,<3.0.0",
    "pydantic-settings>=2.1.0,<3.0.0",
    "email-validator>=2.1.0,<3.0.0",
    # Authentication and security
    "python-jose[cryptography]>=3.3.0,<4.0.0",
    "ecdsa>=0.19.0,!=0.19.1",  # Exclude vulnerable version
    "passlib[bcrypt]>=1.7.4,<2.0.0",
    "python-multipart>=0.0.6,<1.0.0",
    # ML and NLP - Using more flexible versions
    "transformers>=4.35.0,<5.0.0",
    "torch>=2.2.0,<3.0.0",
    "numpy>=1.24.0,<2.0.0",
    "scikit-learn>=1.3.0,<2.0.0",
    # HTTP client and API integrations
    "requests>=2.31.0,<3.0.0",
    "httpx>=0.25.0,<1.0.0",
    "aiohttp>=3.9.0,<4.0.0",
    # Monitoring and logging
    "prometheus-client>=0.19.0,<1.0.0",
    "structlog>=23.2.0,<24.0.0",
    "sentry-sdk[fastapi]>=1.38.0,<2.0.0",
    # Data processing - More flexible pandas version
    "pandas>=2.0.0,<3.0.0",
    "python-dateutil>=2.8.0,<3.0.0",
    # WebSocket support
    "websockets>=12.0,<13.0",
    # Production utilities
    "psutil>=5.9.0,<6.0.0",
    "schedule>=1.2.0,<2.0.0",
    "apscheduler>=3.10.0,<4.0.0",
    # Data ingestion and processing
    "tweepy>=4.14.0,<5.0.0",
    "feedparser>=6.0.0,<7.0.0",
    # MLOps dependencies - Made optional to avoid conflicts
    "wandb>=0.16.0,<1.0.0",
    "huggingface-hub>=0.19.0,<1.0.0",
]

[project.optional-dependencies]
# MLOps features that might have complex dependencies
mlops = [
    "hopsworks>=3.4.0,<4.0.0",
]

# Development dependencies
dev = [
    # Build dependencies
    "setuptools>=65.0.0",
    
    # Testing dependencies
    "pytest>=8.0.0,<9.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "pytest-mock>=3.12.0,<4.0.0",
    "pytest-xdist>=3.5.0,<4.0.0",
    "faker>=22.0.0,<23.0.0",
    "factory-boy>=3.3.0,<4.0.0",
    
    # Code quality
    "black>=24.3.0,<25.0.0",
    "flake8>=7.0.0,<8.0.0",
    "mypy>=1.8.0,<2.0.0",
    
    # Security scanning
    "bandit>=1.7.5,<2.0.0",
    
    # Additional testing dependencies
    "docker>=7.0.0,<8.0.0",
]

[project.urls]
Homepage = "https://github.com/cdobratz/NFL-Sentiment-Analyzer"
Repository = "https://github.com/cdobratz/NFL-Sentiment-Analyzer"
Issues = "https://github.com/cdobratz/NFL-Sentiment-Analyzer/issues"

[dependency-groups]
dev = [
    "bandit>=1.8.6",
    "black>=24.10.0",
    "docker>=7.1.0",
    "factory-boy>=3.3.3",
    "faker>=22.7.0",
    "flake8>=7.3.0",
    "mypy>=1.18.2",
    "pytest>=8.4.2",
    "pytest-asyncio>=0.26.0",
    "pytest-timeout>=2.3.1",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.15.1",
    "pytest-xdist>=3.8.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--disable-warnings",
    "--tb=short",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "performance: Performance tests",
    "slow: Slow running tests",
]
asyncio_mode = "auto"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
namespace_packages = true
explicit_package_bases = true
mypy_path = "."

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
