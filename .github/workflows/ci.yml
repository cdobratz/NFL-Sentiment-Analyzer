name: CI/CD Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7.2-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Cache uv dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Run backend tests
      run: |
        uv run pytest --cov=app --cov-report=xml --cov-report=term-missing -v
      env:
        MONGODB_URL: mongodb://localhost:27017
        DATABASE_NAME: test_nfl_sentiment
        REDIS_URL: redis://localhost:6379/1
        JWT_SECRET_KEY: test-secret-key-for-testing
        SECRET_KEY: test-secret-key-for-testing
        TESTING: true

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: backend
        name: backend-coverage

  test-frontend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci

    - name: Run frontend tests
      run: |
        cd frontend
        npm run test:coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage

  lint-and-format:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Install Python dependencies
      run: |
        uv sync --dev

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci

    - name: Run Python linting
      run: |
        uv run python -m black --check app
        uv run python -m flake8 app
        uv run python -m mypy app

    - name: Run frontend linting
      run: |
        cd frontend
        npm run lint

  build:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend, lint-and-format]

    steps:
    - uses: actions/checkout@v4

    - name: Build Docker image
      run: docker build --target production -t nfl-sentiment-analyzer .

    - name: Test Docker image
      run: |
        docker run --rm -d --name test-container -p 8000:8000 \
          -e MONGODB_URL=mongodb://localhost:27017 \
          -e DATABASE_NAME=test_nfl_sentiment \
          -e REDIS_URL=redis://localhost:6379 \
          -e JWT_SECRET_KEY=test-secret-key \
          nfl-sentiment-analyzer
        sleep 15
        curl -f http://localhost:8000/health || (docker logs test-container && exit 1)
        docker stop test-container

    # Development branch specific steps
    - name: Development specific checks
      if: github.ref == 'refs/heads/dev'
      run: |
        echo "Running development branch specific checks..."
        # Add development environment specific checks here

    # Main branch specific steps
    - name: Production deployment
      if: github.ref == 'refs/heads/main'
      run: |
        echo "Running production deployment steps..."
        # Add production deployment steps here
